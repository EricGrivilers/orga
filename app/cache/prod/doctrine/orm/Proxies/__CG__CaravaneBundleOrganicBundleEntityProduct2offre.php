<?php

namespace Proxies\__CG__\Caravane\Bundle\OrganicBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Product2offre extends \Caravane\Bundle\OrganicBundle\Entity\Product2offre implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'productId', 'description', 'price', 'insertdate', 'updatedate', 'rank', 'isoption', 'datas', 'datasAsObject', 'offreid', 'tentid', 'transportid', 'toremove');
        }

        return array('__isInitialized__', 'id', 'productId', 'description', 'price', 'insertdate', 'updatedate', 'rank', 'isoption', 'datas', 'datasAsObject', 'offreid', 'tentid', 'transportid', 'toremove');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Product2offre $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setProductId($productId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProductId', array($productId));

        return parent::setProductId($productId);
    }

    /**
     * {@inheritDoc}
     */
    public function getProductId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProductId', array());

        return parent::getProductId();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrice($price)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrice', array($price));

        return parent::setPrice($price);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrice', array());

        return parent::getPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function setInsertdate($insertdate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInsertdate', array($insertdate));

        return parent::setInsertdate($insertdate);
    }

    /**
     * {@inheritDoc}
     */
    public function getInsertdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInsertdate', array());

        return parent::getInsertdate();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedate($updatedate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedate', array($updatedate));

        return parent::setUpdatedate($updatedate);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedate', array());

        return parent::getUpdatedate();
    }

    /**
     * {@inheritDoc}
     */
    public function setRank($rank)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRank', array($rank));

        return parent::setRank($rank);
    }

    /**
     * {@inheritDoc}
     */
    public function getRank()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRank', array());

        return parent::getRank();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsoption($isoption)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsoption', array($isoption));

        return parent::setIsoption($isoption);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsoption()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsoption', array());

        return parent::getIsoption();
    }

    /**
     * {@inheritDoc}
     */
    public function setOffreid(\Caravane\Bundle\OrganicBundle\Entity\Offre $offreid = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOffreid', array($offreid));

        return parent::setOffreid($offreid);
    }

    /**
     * {@inheritDoc}
     */
    public function getOffreid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOffreid', array());

        return parent::getOffreid();
    }

    /**
     * {@inheritDoc}
     */
    public function setDatas($datas)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDatas', array($datas));

        return parent::setDatas($datas);
    }

    /**
     * {@inheritDoc}
     */
    public function getDatas()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDatas', array());

        return parent::getDatas();
    }

    /**
     * {@inheritDoc}
     */
    public function getDatasAsObject()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDatasAsObject', array());

        return parent::getDatasAsObject();
    }

    /**
     * {@inheritDoc}
     */
    public function setTentid(\Caravane\Bundle\OrganicBundle\Entity\Tent $tentid = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTentid', array($tentid));

        return parent::setTentid($tentid);
    }

    /**
     * {@inheritDoc}
     */
    public function getTentid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTentid', array());

        return parent::getTentid();
    }

    /**
     * {@inheritDoc}
     */
    public function setToremove($toremove)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setToremove', array($toremove));

        return parent::setToremove($toremove);
    }

    /**
     * {@inheritDoc}
     */
    public function getToremove()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getToremove', array());

        return parent::getToremove();
    }

    /**
     * {@inheritDoc}
     */
    public function setTransportid(\Caravane\Bundle\OrganicBundle\Entity\Transport $transportid = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTransportid', array($transportid));

        return parent::setTransportid($transportid);
    }

    /**
     * {@inheritDoc}
     */
    public function getTransportid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTransportid', array());

        return parent::getTransportid();
    }

}
