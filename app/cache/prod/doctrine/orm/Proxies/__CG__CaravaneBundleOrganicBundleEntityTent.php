<?php

namespace Proxies\__CG__\Caravane\Bundle\OrganicBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Tent extends \Caravane\Bundle\OrganicBundle\Entity\Tent implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'name', 'reference', 'kit', 'owner', 'color', 'length', 'width', 'm2', 'weight', 'height', 'piquets', 'status', 'etat', 'comments', 'winter', 'issue', 'insertdate', 'updatedate', 'public', 'winteroffreid', 'ownerid', 'tents2job', 'tents2offre', 'productCategory', 'offres', 'jobs', 'document', 'files');
        }

        return array('__isInitialized__', 'id', 'name', 'reference', 'kit', 'owner', 'color', 'length', 'width', 'm2', 'weight', 'height', 'piquets', 'status', 'etat', 'comments', 'winter', 'issue', 'insertdate', 'updatedate', 'public', 'winteroffreid', 'ownerid', 'tents2job', 'tents2offre', 'productCategory', 'offres', 'jobs', 'document', 'files');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Tent $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getFiles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFiles', array());

        return parent::getFiles();
    }

    /**
     * {@inheritDoc}
     */
    public function setFiles($files)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFiles', array($files));

        return parent::setFiles($files);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setReference($reference)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReference', array($reference));

        return parent::setReference($reference);
    }

    /**
     * {@inheritDoc}
     */
    public function getReference()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReference', array());

        return parent::getReference();
    }

    /**
     * {@inheritDoc}
     */
    public function setKit($kit)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setKit', array($kit));

        return parent::setKit($kit);
    }

    /**
     * {@inheritDoc}
     */
    public function getKit()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getKit', array());

        return parent::getKit();
    }

    /**
     * {@inheritDoc}
     */
    public function setOwner($owner)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOwner', array($owner));

        return parent::setOwner($owner);
    }

    /**
     * {@inheritDoc}
     */
    public function getOwner()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOwner', array());

        return parent::getOwner();
    }

    /**
     * {@inheritDoc}
     */
    public function setColor($color)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setColor', array($color));

        return parent::setColor($color);
    }

    /**
     * {@inheritDoc}
     */
    public function getColor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getColor', array());

        return parent::getColor();
    }

    /**
     * {@inheritDoc}
     */
    public function setLength($length)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLength', array($length));

        return parent::setLength($length);
    }

    /**
     * {@inheritDoc}
     */
    public function getLength()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLength', array());

        return parent::getLength();
    }

    /**
     * {@inheritDoc}
     */
    public function setWidth($width)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWidth', array($width));

        return parent::setWidth($width);
    }

    /**
     * {@inheritDoc}
     */
    public function getWidth()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWidth', array());

        return parent::getWidth();
    }

    /**
     * {@inheritDoc}
     */
    public function setM2($m2)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setM2', array($m2));

        return parent::setM2($m2);
    }

    /**
     * {@inheritDoc}
     */
    public function getM2()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getM2', array());

        return parent::getM2();
    }

    /**
     * {@inheritDoc}
     */
    public function setWeight($weight)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWeight', array($weight));

        return parent::setWeight($weight);
    }

    /**
     * {@inheritDoc}
     */
    public function getWeight()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWeight', array());

        return parent::getWeight();
    }

    /**
     * {@inheritDoc}
     */
    public function setPiquets($piquets)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPiquets', array($piquets));

        return parent::setPiquets($piquets);
    }

    /**
     * {@inheritDoc}
     */
    public function getPiquets()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPiquets', array());

        return parent::getPiquets();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', array($status));

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', array());

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setEtat($etat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEtat', array($etat));

        return parent::setEtat($etat);
    }

    /**
     * {@inheritDoc}
     */
    public function getEtat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEtat', array());

        return parent::getEtat();
    }

    /**
     * {@inheritDoc}
     */
    public function setComments($comments)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setComments', array($comments));

        return parent::setComments($comments);
    }

    /**
     * {@inheritDoc}
     */
    public function getComments()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getComments', array());

        return parent::getComments();
    }

    /**
     * {@inheritDoc}
     */
    public function setWinter($winter)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWinter', array($winter));

        return parent::setWinter($winter);
    }

    /**
     * {@inheritDoc}
     */
    public function getWinter()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWinter', array());

        return parent::getWinter();
    }

    /**
     * {@inheritDoc}
     */
    public function setIssue($issue)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIssue', array($issue));

        return parent::setIssue($issue);
    }

    /**
     * {@inheritDoc}
     */
    public function getIssue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIssue', array());

        return parent::getIssue();
    }

    /**
     * {@inheritDoc}
     */
    public function setInsertdate($insertdate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInsertdate', array($insertdate));

        return parent::setInsertdate($insertdate);
    }

    /**
     * {@inheritDoc}
     */
    public function getInsertdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInsertdate', array());

        return parent::getInsertdate();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedate($updatedate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedate', array($updatedate));

        return parent::setUpdatedate($updatedate);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedate', array());

        return parent::getUpdatedate();
    }

    /**
     * {@inheritDoc}
     */
    public function setPublic($public)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublic', array($public));

        return parent::setPublic($public);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublic()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublic', array());

        return parent::getPublic();
    }

    /**
     * {@inheritDoc}
     */
    public function setWinteroffreid(\Caravane\Bundle\OrganicBundle\Entity\Offre $winteroffreid = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWinteroffreid', array($winteroffreid));

        return parent::setWinteroffreid($winteroffreid);
    }

    /**
     * {@inheritDoc}
     */
    public function getWinteroffreid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWinteroffreid', array());

        return parent::getWinteroffreid();
    }

    /**
     * {@inheritDoc}
     */
    public function setOwnerid(\Caravane\Bundle\OrganicBundle\Entity\Client $ownerid = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOwnerid', array($ownerid));

        return parent::setOwnerid($ownerid);
    }

    /**
     * {@inheritDoc}
     */
    public function getOwnerid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOwnerid', array());

        return parent::getOwnerid();
    }

    /**
     * {@inheritDoc}
     */
    public function addTents2job(\Caravane\Bundle\OrganicBundle\Entity\Tent2job $tents2job)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTents2job', array($tents2job));

        return parent::addTents2job($tents2job);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTents2job(\Caravane\Bundle\OrganicBundle\Entity\Tent2job $tents2job)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTents2job', array($tents2job));

        return parent::removeTents2job($tents2job);
    }

    /**
     * {@inheritDoc}
     */
    public function getTents2job()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTents2job', array());

        return parent::getTents2job();
    }

    /**
     * {@inheritDoc}
     */
    public function addTents2offre(\Caravane\Bundle\OrganicBundle\Entity\Tent2offre $tents2offre)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTents2offre', array($tents2offre));

        return parent::addTents2offre($tents2offre);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTents2offre(\Caravane\Bundle\OrganicBundle\Entity\Tent2offre $tents2offre)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTents2offre', array($tents2offre));

        return parent::removeTents2offre($tents2offre);
    }

    /**
     * {@inheritDoc}
     */
    public function getTents2offre()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTents2offre', array());

        return parent::getTents2offre();
    }

    /**
     * {@inheritDoc}
     */
    public function setHeight($height)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHeight', array($height));

        return parent::setHeight($height);
    }

    /**
     * {@inheritDoc}
     */
    public function getHeight()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHeight', array());

        return parent::getHeight();
    }

    /**
     * {@inheritDoc}
     */
    public function getFormField()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFormField', array());

        return parent::getFormField();
    }

    /**
     * {@inheritDoc}
     */
    public function setProductCategory(\Caravane\Bundle\OrganicBundle\Entity\ProductCategory $productCategory = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProductCategory', array($productCategory));

        return parent::setProductCategory($productCategory);
    }

    /**
     * {@inheritDoc}
     */
    public function getProductCategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProductCategory', array());

        return parent::getProductCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function addOffre(\Caravane\Bundle\OrganicBundle\Entity\Product2offre $offres)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addOffre', array($offres));

        return parent::addOffre($offres);
    }

    /**
     * {@inheritDoc}
     */
    public function removeOffre(\Caravane\Bundle\OrganicBundle\Entity\Product2offre $offres)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeOffre', array($offres));

        return parent::removeOffre($offres);
    }

    /**
     * {@inheritDoc}
     */
    public function getOffres()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOffres', array());

        return parent::getOffres();
    }

    /**
     * {@inheritDoc}
     */
    public function addJob(\Caravane\Bundle\OrganicBundle\Entity\Product2job $jobs)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addJob', array($jobs));

        return parent::addJob($jobs);
    }

    /**
     * {@inheritDoc}
     */
    public function removeJob(\Caravane\Bundle\OrganicBundle\Entity\Product2job $jobs)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeJob', array($jobs));

        return parent::removeJob($jobs);
    }

    /**
     * {@inheritDoc}
     */
    public function getJobs()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJobs', array());

        return parent::getJobs();
    }

    /**
     * {@inheritDoc}
     */
    public function addDocument(\Caravane\Bundle\OrganicBundle\Entity\Document $document)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addDocument', array($document));

        return parent::addDocument($document);
    }

    /**
     * {@inheritDoc}
     */
    public function removeDocument(\Caravane\Bundle\OrganicBundle\Entity\Document $document)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeDocument', array($document));

        return parent::removeDocument($document);
    }

    /**
     * {@inheritDoc}
     */
    public function getDocument()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDocument', array());

        return parent::getDocument();
    }

}
