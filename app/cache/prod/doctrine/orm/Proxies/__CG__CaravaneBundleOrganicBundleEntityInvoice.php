<?php

namespace Proxies\__CG__\Caravane\Bundle\OrganicBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Invoice extends \Caravane\Bundle\OrganicBundle\Entity\Invoice implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'reference', 'year', 'offretype', 'slice', 'sliceDescription', 'cslice', 'nbslices', 'insertdate', 'invoicedate', 'paymentdate', 'priceht', 'pricetype', 'discount', 'discountDescription', 'creditnote', 'comments', 'conditions', 'conditions1', 'conditions2', 'content', 'cietype', 'clienttype', 'clienttitle', 'name', 'lastname', 'firstname', 'vat', 'address', 'number', 'zip', 'city', 'country', 'status', 'r1', 'r1date', 'r2', 'r2date', 'med', 'meddate', 'language', 'sliceid', 'jobid', 'clientid', 'products', 'condition');
        }

        return array('__isInitialized__', 'id', 'reference', 'year', 'offretype', 'slice', 'sliceDescription', 'cslice', 'nbslices', 'insertdate', 'invoicedate', 'paymentdate', 'priceht', 'pricetype', 'discount', 'discountDescription', 'creditnote', 'comments', 'conditions', 'conditions1', 'conditions2', 'content', 'cietype', 'clienttype', 'clienttitle', 'name', 'lastname', 'firstname', 'vat', 'address', 'number', 'zip', 'city', 'country', 'status', 'r1', 'r1date', 'r2', 'r2date', 'med', 'meddate', 'language', 'sliceid', 'jobid', 'clientid', 'products', 'condition');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Invoice $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setReference($reference)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReference', array($reference));

        return parent::setReference($reference);
    }

    /**
     * {@inheritDoc}
     */
    public function getReference()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReference', array());

        return parent::getReference();
    }

    /**
     * {@inheritDoc}
     */
    public function setYear($year)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setYear', array($year));

        return parent::setYear($year);
    }

    /**
     * {@inheritDoc}
     */
    public function getYear()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getYear', array());

        return parent::getYear();
    }

    /**
     * {@inheritDoc}
     */
    public function setOffretype($offretype)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOffretype', array($offretype));

        return parent::setOffretype($offretype);
    }

    /**
     * {@inheritDoc}
     */
    public function getOffretype()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOffretype', array());

        return parent::getOffretype();
    }

    /**
     * {@inheritDoc}
     */
    public function setSlice($slice)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSlice', array($slice));

        return parent::setSlice($slice);
    }

    /**
     * {@inheritDoc}
     */
    public function getSlice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSlice', array());

        return parent::getSlice();
    }

    /**
     * {@inheritDoc}
     */
    public function setCslice($cslice)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCslice', array($cslice));

        return parent::setCslice($cslice);
    }

    /**
     * {@inheritDoc}
     */
    public function getCslice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCslice', array());

        return parent::getCslice();
    }

    /**
     * {@inheritDoc}
     */
    public function setNbslices($nbslices)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNbslices', array($nbslices));

        return parent::setNbslices($nbslices);
    }

    /**
     * {@inheritDoc}
     */
    public function getNbslices()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNbslices', array());

        return parent::getNbslices();
    }

    /**
     * {@inheritDoc}
     */
    public function setInsertdate($insertdate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInsertdate', array($insertdate));

        return parent::setInsertdate($insertdate);
    }

    /**
     * {@inheritDoc}
     */
    public function getInsertdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInsertdate', array());

        return parent::getInsertdate();
    }

    /**
     * {@inheritDoc}
     */
    public function setInvoicedate($invoicedate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInvoicedate', array($invoicedate));

        return parent::setInvoicedate($invoicedate);
    }

    /**
     * {@inheritDoc}
     */
    public function getInvoicedate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInvoicedate', array());

        return parent::getInvoicedate();
    }

    /**
     * {@inheritDoc}
     */
    public function setPaymentdate($paymentdate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPaymentdate', array($paymentdate));

        return parent::setPaymentdate($paymentdate);
    }

    /**
     * {@inheritDoc}
     */
    public function getPaymentdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaymentdate', array());

        return parent::getPaymentdate();
    }

    /**
     * {@inheritDoc}
     */
    public function setPriceht($priceht)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPriceht', array($priceht));

        return parent::setPriceht($priceht);
    }

    /**
     * {@inheritDoc}
     */
    public function getPriceht()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPriceht', array());

        return parent::getPriceht();
    }

    /**
     * {@inheritDoc}
     */
    public function setPricetype($pricetype)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPricetype', array($pricetype));

        return parent::setPricetype($pricetype);
    }

    /**
     * {@inheritDoc}
     */
    public function getPricetype()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPricetype', array());

        return parent::getPricetype();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreditnote($creditnote)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreditnote', array($creditnote));

        return parent::setCreditnote($creditnote);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreditnote()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreditnote', array());

        return parent::getCreditnote();
    }

    /**
     * {@inheritDoc}
     */
    public function setComments($comments)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setComments', array($comments));

        return parent::setComments($comments);
    }

    /**
     * {@inheritDoc}
     */
    public function getComments()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getComments', array());

        return parent::getComments();
    }

    /**
     * {@inheritDoc}
     */
    public function setConditions($conditions)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConditions', array($conditions));

        return parent::setConditions($conditions);
    }

    /**
     * {@inheritDoc}
     */
    public function getConditions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConditions', array());

        return parent::getConditions();
    }

    /**
     * {@inheritDoc}
     */
    public function setConditions1($conditions1)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConditions1', array($conditions1));

        return parent::setConditions1($conditions1);
    }

    /**
     * {@inheritDoc}
     */
    public function getConditions1()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConditions1', array());

        return parent::getConditions1();
    }

    /**
     * {@inheritDoc}
     */
    public function setConditions2($conditions2)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConditions2', array($conditions2));

        return parent::setConditions2($conditions2);
    }

    /**
     * {@inheritDoc}
     */
    public function getConditions2()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConditions2', array());

        return parent::getConditions2();
    }

    /**
     * {@inheritDoc}
     */
    public function setContent($content)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContent', array($content));

        return parent::setContent($content);
    }

    /**
     * {@inheritDoc}
     */
    public function getContent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContent', array());

        return parent::getContent();
    }

    /**
     * {@inheritDoc}
     */
    public function setCietype($cietype)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCietype', array($cietype));

        return parent::setCietype($cietype);
    }

    /**
     * {@inheritDoc}
     */
    public function getCietype()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCietype', array());

        return parent::getCietype();
    }

    /**
     * {@inheritDoc}
     */
    public function setClienttype($clienttype)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClienttype', array($clienttype));

        return parent::setClienttype($clienttype);
    }

    /**
     * {@inheritDoc}
     */
    public function getClienttype()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClienttype', array());

        return parent::getClienttype();
    }

    /**
     * {@inheritDoc}
     */
    public function setClienttitle($clienttitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClienttitle', array($clienttitle));

        return parent::setClienttitle($clienttitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getClienttitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClienttitle', array());

        return parent::getClienttitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastname($lastname)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastname', array($lastname));

        return parent::setLastname($lastname);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastname()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastname', array());

        return parent::getLastname();
    }

    /**
     * {@inheritDoc}
     */
    public function setFirstname($firstname)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFirstname', array($firstname));

        return parent::setFirstname($firstname);
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstname()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstname', array());

        return parent::getFirstname();
    }

    /**
     * {@inheritDoc}
     */
    public function setVat($vat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVat', array($vat));

        return parent::setVat($vat);
    }

    /**
     * {@inheritDoc}
     */
    public function getVat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVat', array());

        return parent::getVat();
    }

    /**
     * {@inheritDoc}
     */
    public function setAddress($address)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAddress', array($address));

        return parent::setAddress($address);
    }

    /**
     * {@inheritDoc}
     */
    public function getAddress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddress', array());

        return parent::getAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumber($number)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumber', array($number));

        return parent::setNumber($number);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumber()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumber', array());

        return parent::getNumber();
    }

    /**
     * {@inheritDoc}
     */
    public function setZip($zip)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setZip', array($zip));

        return parent::setZip($zip);
    }

    /**
     * {@inheritDoc}
     */
    public function getZip()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getZip', array());

        return parent::getZip();
    }

    /**
     * {@inheritDoc}
     */
    public function setCity($city)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCity', array($city));

        return parent::setCity($city);
    }

    /**
     * {@inheritDoc}
     */
    public function getCity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCity', array());

        return parent::getCity();
    }

    /**
     * {@inheritDoc}
     */
    public function setCountry($country)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCountry', array($country));

        return parent::setCountry($country);
    }

    /**
     * {@inheritDoc}
     */
    public function getCountry()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCountry', array());

        return parent::getCountry();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', array($status));

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', array());

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setR1($r1)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setR1', array($r1));

        return parent::setR1($r1);
    }

    /**
     * {@inheritDoc}
     */
    public function getR1()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getR1', array());

        return parent::getR1();
    }

    /**
     * {@inheritDoc}
     */
    public function setR1date($r1date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setR1date', array($r1date));

        return parent::setR1date($r1date);
    }

    /**
     * {@inheritDoc}
     */
    public function getR1date()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getR1date', array());

        return parent::getR1date();
    }

    /**
     * {@inheritDoc}
     */
    public function setR2($r2)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setR2', array($r2));

        return parent::setR2($r2);
    }

    /**
     * {@inheritDoc}
     */
    public function getR2()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getR2', array());

        return parent::getR2();
    }

    /**
     * {@inheritDoc}
     */
    public function setR2date($r2date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setR2date', array($r2date));

        return parent::setR2date($r2date);
    }

    /**
     * {@inheritDoc}
     */
    public function getR2date()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getR2date', array());

        return parent::getR2date();
    }

    /**
     * {@inheritDoc}
     */
    public function setMed($med)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMed', array($med));

        return parent::setMed($med);
    }

    /**
     * {@inheritDoc}
     */
    public function getMed()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMed', array());

        return parent::getMed();
    }

    /**
     * {@inheritDoc}
     */
    public function setMeddate($meddate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMeddate', array($meddate));

        return parent::setMeddate($meddate);
    }

    /**
     * {@inheritDoc}
     */
    public function getMeddate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMeddate', array());

        return parent::getMeddate();
    }

    /**
     * {@inheritDoc}
     */
    public function setLanguage($language)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLanguage', array($language));

        return parent::setLanguage($language);
    }

    /**
     * {@inheritDoc}
     */
    public function getLanguage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLanguage', array());

        return parent::getLanguage();
    }

    /**
     * {@inheritDoc}
     */
    public function setJobid(\Caravane\Bundle\OrganicBundle\Entity\Job $jobid = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setJobid', array($jobid));

        return parent::setJobid($jobid);
    }

    /**
     * {@inheritDoc}
     */
    public function getJobid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJobid', array());

        return parent::getJobid();
    }

    /**
     * {@inheritDoc}
     */
    public function setClientid(\Caravane\Bundle\OrganicBundle\Entity\Client $clientid = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClientid', array($clientid));

        return parent::setClientid($clientid);
    }

    /**
     * {@inheritDoc}
     */
    public function getClientid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClientid', array());

        return parent::getClientid();
    }

    /**
     * {@inheritDoc}
     */
    public function getPriceTTC()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPriceTTC', array());

        return parent::getPriceTTC();
    }

    /**
     * {@inheritDoc}
     */
    public function addProduct(\Caravane\Bundle\OrganicBundle\Entity\Product2invoice $products)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addProduct', array($products));

        return parent::addProduct($products);
    }

    /**
     * {@inheritDoc}
     */
    public function removeProduct(\Caravane\Bundle\OrganicBundle\Entity\Product2invoice $products)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeProduct', array($products));

        return parent::removeProduct($products);
    }

    /**
     * {@inheritDoc}
     */
    public function getProducts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProducts', array());

        return parent::getProducts();
    }

    /**
     * {@inheritDoc}
     */
    public function setSliceid(\Caravane\Bundle\OrganicBundle\Entity\Slice2job $sliceid = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSliceid', array($sliceid));

        return parent::setSliceid($sliceid);
    }

    /**
     * {@inheritDoc}
     */
    public function getSliceid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSliceid', array());

        return parent::getSliceid();
    }

    /**
     * {@inheritDoc}
     */
    public function setSliceDescription($sliceDescription)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSliceDescription', array($sliceDescription));

        return parent::setSliceDescription($sliceDescription);
    }

    /**
     * {@inheritDoc}
     */
    public function getSliceDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSliceDescription', array());

        return parent::getSliceDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDiscount($discount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDiscount', array($discount));

        return parent::setDiscount($discount);
    }

    /**
     * {@inheritDoc}
     */
    public function getDiscount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDiscount', array());

        return parent::getDiscount();
    }

    /**
     * {@inheritDoc}
     */
    public function setDiscountDescription($discountDescription)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDiscountDescription', array($discountDescription));

        return parent::setDiscountDescription($discountDescription);
    }

    /**
     * {@inheritDoc}
     */
    public function getDiscountDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDiscountDescription', array());

        return parent::getDiscountDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function addCondition(\Caravane\Bundle\OrganicBundle\Entity\Condition $condition)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCondition', array($condition));

        return parent::addCondition($condition);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCondition(\Caravane\Bundle\OrganicBundle\Entity\Condition $condition)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCondition', array($condition));

        return parent::removeCondition($condition);
    }

    /**
     * {@inheritDoc}
     */
    public function getCondition()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCondition', array());

        return parent::getCondition();
    }

}
